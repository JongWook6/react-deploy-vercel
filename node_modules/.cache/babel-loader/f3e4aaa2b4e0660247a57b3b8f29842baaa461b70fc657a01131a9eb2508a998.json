{"ast":null,"code":"var _jsxFileName = \"/Users/parkjongwook/backend/d_front/d_react/grepp-react/src/pages/Game.js\",\n  _s = $RefreshSig$();\n// 객체를 매개변수로 받아서 각 변수에 구조분해하여 할당(비구조화 할당)\nimport { useEffect, useRef, useState } from \"react\";\nimport useGameStore from \"../stores/GameStore\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n_c = Square;\nexport default function Game() {\n  _s();\n  // react 의 hook 은 컴포넌트의 최상위 레벨에 존재해야 한다.\n  // 조건문, 반복문, 함수 안에서 사용 불가\n  const {\n    history,\n    setHistory,\n    currentMove,\n    setCurrentMove\n  } = useGameStore();\n  const currentSquares = history[currentMove];\n  const xIsNext = currentMove % 2 === 0;\n  const winner = calculateWinner(currentSquares);\n  const timer = useRef();\n  useEffect(() => {\n    let timerId;\n    let count = 1;\n    if (!winner) {\n      timerId = setInterval(() => {\n        timer.current.textContent = count++ + \"초\";\n        // document.querySelector('#timer').textContent = count++ + '초'\n      }, 1000);\n    }\n\n    // 클린업 함수: 컴포넌트 언마운트 또는 deps 의 요소가 변경되어 다시 실행되기 전에 호출\n    return () => {\n      console.log('게임 컴포넌트가 정리됩니다.');\n      clearInterval(timerId);\n    };\n  }, [winner]);\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(idx) {\n    setCurrentMove(idx);\n  }\n  const moves = history.map((squares, idx) => {\n    let description = 'Go to move #' + idx;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(idx),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"timer\",\n      ref: timer,\n      children: \"Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          xIsNext: xIsNext,\n          squares: currentSquares,\n          onPlay: handlePlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Game, \"phqE90d2PwqrIVvL9s3mwPXXcD4=\", false, function () {\n  return [useGameStore];\n});\n_c2 = Game;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = winner + \" is win!!\";\n  } else {\n    status = \"Next player is \" + (xIsNext ? 'X' : 'O');\n  }\n  function handleClick(i) {\n    const nextSquares = squares.slice(); // 새로운 배열로 복사하여 반환\n\n    // 이미 X/O 가 표시된 경우 또는 승자가 결정된 경우 빠른 리턴\n    if (nextSquares[i] || calculateWinner(squares)) return;\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n\n  // JSX(JavaScript XML) 문법: 함수가 호출되는 위치에 HTML 태그를 추가\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c3 = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Game\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"names":["useEffect","useRef","useState","useGameStore","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Game","_s","history","setHistory","currentMove","setCurrentMove","currentSquares","xIsNext","winner","calculateWinner","timer","timerId","count","setInterval","current","textContent","console","log","clearInterval","handlePlay","nextSquares","nextHistory","slice","length","jumpTo","idx","moves","map","squares","description","id","ref","Board","onPlay","_c2","status","handleClick","i","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/Users/parkjongwook/backend/d_front/d_react/grepp-react/src/pages/Game.js"],"sourcesContent":["// 객체를 매개변수로 받아서 각 변수에 구조분해하여 할당(비구조화 할당)\nimport {useEffect, useRef, useState} from \"react\";\nimport useGameStore from \"../stores/GameStore\"\n\nfunction Square({value, onSquareClick}) {\n\n  return <button className=\"square\" onClick={onSquareClick}>{value}</button>\n}\n\nexport default function Game() {\n  // react 의 hook 은 컴포넌트의 최상위 레벨에 존재해야 한다.\n  // 조건문, 반복문, 함수 안에서 사용 불가\n  const {history, setHistory, currentMove, setCurrentMove} = useGameStore();\n  const currentSquares = history[currentMove];\n  const xIsNext = currentMove % 2 === 0;\n  const winner = calculateWinner(currentSquares);\n  const timer = useRef();\n\n  useEffect(() => {\n    let timerId;\n    let count = 1;\n\n    if (!winner) {\n      timerId = setInterval(() => {\n        timer.current.textContent = count++ + \"초\"\n        // document.querySelector('#timer').textContent = count++ + '초'\n      }, 1000);\n    }\n\n    // 클린업 함수: 컴포넌트 언마운트 또는 deps 의 요소가 변경되어 다시 실행되기 전에 호출\n    return () => {\n      console.log('게임 컴포넌트가 정리됩니다.');\n      clearInterval(timerId)\n    }\n  }, [winner]);\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory)\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(idx) {\n    setCurrentMove(idx)\n  }\n\n  const moves = history.map((squares, idx) => {\n    let description = 'Go to move #' + idx;\n\n    return (\n        <li key={idx}>\n          <button onClick={() => jumpTo(idx)}>{description}</button>\n        </li>\n    );\n  })\n\n  return (\n      <>\n        <h3 id=\"timer\" ref={timer}>Timer</h3>\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay}/>\n          </div>\n          <div className=\"game-info\">\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      </>\n  );\n}\n\nfunction Board({xIsNext, squares, onPlay}) {\n\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = winner + \" is win!!\"\n  } else {\n    status = \"Next player is \" + (xIsNext ? 'X' : 'O');\n  }\n\n  function handleClick(i) {\n    const nextSquares = squares.slice(); // 새로운 배열로 복사하여 반환\n\n    // 이미 X/O 가 표시된 경우 또는 승자가 결정된 경우 빠른 리턴\n    if (nextSquares[i] || calculateWinner(squares)) return;\n\n    if (xIsNext){\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares)\n  }\n\n  // JSX(JavaScript XML) 문법: 함수가 호출되는 위치에 HTML 태그를 추가\n  return (\n      <>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          <Square value={squares[0]} onSquareClick={() => handleClick(0)}/>\n          <Square value={squares[1]} onSquareClick={() => handleClick(1)}/>\n          <Square value={squares[2]} onSquareClick={() => handleClick(2)}/>\n        </div>\n        <div className=\"board-row\">\n          <Square value={squares[3]} onSquareClick={() => handleClick(3)}/>\n          <Square value={squares[4]} onSquareClick={() => handleClick(4)}/>\n          <Square value={squares[5]} onSquareClick={() => handleClick(5)}/>\n        </div>\n        <div className=\"board-row\">\n          <Square value={squares[6]} onSquareClick={() => handleClick(6)}/>\n          <Square value={squares[7]} onSquareClick={() => handleClick(7)}/>\n          <Square value={squares[8]} onSquareClick={() => handleClick(8)}/>\n        </div>\n      </>\n  )\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}